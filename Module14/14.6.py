# Задача «Яйца»

# Функция для вычисления среднего значения глубины и уровня опасности на этой глубине
def danger(d_min, d_max):
    # Вычисляем среднее значение между минимальной и максимальной глубинами
    d_middle = (d_min + d_max) / 2
    # Вычисляем уровень опасности по заданной формуле, используя среднее значение глубины
    middle_danger = d_middle ** 3 - 3 * d_middle ** 2 - 12 * d_middle + 10
    # Возвращаем среднее значение глубины и рассчитанный уровень опасности
    return d_middle, middle_danger

# Основная функция для поиска безопасной глубины


def depth_calculation(user_danger_level):
    # Задаём начальные границы глубины: от 0 до 4 метров
    lower_bound = 0
    upper_bound = 4

    # Запускаем бесконечный цикл, который будет завершён при достижении нужного уровня опасности
    while True:
        # Вычисляем среднюю глубину и уровень опасности на этой глубине
        mid, danger_level = danger(lower_bound, upper_bound)

        # Если уровень опасности больше 0, значит, глубина слишком мала — изменяем нижнюю границу
        if danger_level > 0:
            lower_bound = mid
        # Иначе уровень опасности меньше или равен 0, значит, глубина слишком велика — изменяем верхнюю границу
        else:
            upper_bound = mid

        # Проверяем, достигнут ли допустимый уровень опасности (модуль разницы меньше допустимого значения)
        if abs(danger_level) < user_danger_level:
            # Если да, возвращаем найденную глубину
            return mid


# Запрашиваем у пользователя максимально допустимый уровень опасности
max_danger = float(input("Введите максимально допустимый уровень опасности: "))

# Выполняем расчёт безопасной глубины
result = depth_calculation(max_danger)

# Выводим результат — глубину, на которой уровень опасности минимален и безопасен
print("Приблизительная глубина безопасной кладки: ", result)
